<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:filesystem.properties</value>
                <value>file:@installDirRoot@/shared/conf/google-drive.properties</value>
                <value>file:@installDirRoot@/shared/conf/dropbox.properties</value>
                <value>classpath:custom-filesystem.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <context:annotation-config />

    <!-- Cache -->

    <bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager">
        <constructor-arg value="${cache.config.file}" />
    </bean>

    <!-- DB -->

    <bean id="mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg value="${mongo.host}" />
        <constructor-arg value="${mongo.port}" />
    </bean>

    <bean id="jongo" class="org.avasquez.seccloudfs.db.impl.JongoFactoryBean">
        <property name="dbName" value="${mongo.db.name}" />
        <property name="mongoClient" ref="mongoClient" />
    </bean>

    <bean id="contentMetadataRepo"
          class="org.avasquez.seccloudfs.filesystem.db.repos.impl.JongoContentMetadataRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <bean id="directoryEntryRepo"
          class="org.avasquez.seccloudfs.filesystem.db.repos.impl.JongoDirectoryEntryRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <bean id="fileMetadataRepo" class="org.avasquez.seccloudfs.filesystem.db.repos.impl.JongoFileMetadataRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <bean id="fileSystemInfoRepo"
          class="org.avasquez.seccloudfs.filesystem.db.repos.impl.JongoFileSystemInfoRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <bean id="googleDriveCredentialsRepo"
          class="org.avasquez.seccloudfs.gdrive.db.repos.impl.FileGoogleDriveCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/google-drive"/>
    </bean>

    <bean id="dropboxCredentialsRepo"
          class="org.avasquez.seccloudfs.dropbox.db.repos.impl.FileDropboxCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/dropbox"/>
    </bean>

    <bean id="encryptionKeyRepo" class="org.avasquez.seccloudfs.processing.db.repos.impl.JongoEncryptionKeyRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <bean id="erasureInfoRepo" class="org.avasquez.seccloudfs.processing.db.repos.impl.JongoUploadRepository">
        <constructor-arg ref="jongo"/>
    </bean>

    <!-- Thread Pool -->

    <bean id="threadPool" class="java.util.concurrent.ScheduledThreadPoolExecutor">
        <constructor-arg value="${threads.pool.coreSize}"/>
    </bean>

    <!-- Content Store -->

    <bean id="contentStore" class="org.avasquez.seccloudfs.filesystem.content.impl.CloudContentStoreImpl">
        <property name="cacheContainer" ref="cacheManager"/>
        <property name="metadataRepo" ref="contentMetadataRepo"/>
        <property name="cloudStore" ref="distributedCloudStore"/>
        <property name="downloadsDir" value="${cloud.content.downloads.dir}"/>
        <property name="snapshotDir" value="${cloud.content.snapshots.dir}"/>
        <property name="executorService" ref="threadPool"/>
        <property name="timeoutForNextUpdateSecs" value="${cloud.content.uploader.timeoutForNextUpdateSecs}"/>
        <property name="retryUploadDelaySecs" value="${cloud.content.uploader.retryDelaySecs}"/>
        <property name="maxSize" value="${cloud.content.maxSize}"/>
    </bean>

    <!-- File System -->

    <bean id="fileObjectStore" class="org.avasquez.seccloudfs.filesystem.files.impl.FileObjectStoreImpl">
        <property name="cacheContainer" ref="cacheManager"/>
        <property name="metadataRepo" ref="fileMetadataRepo"/>
        <property name="entryRepo" ref="directoryEntryRepo"/>
        <property name="contentStore" ref="contentStore"/>
    </bean>

    <bean id="fileSystem" class="org.avasquez.seccloudfs.filesystem.files.impl.FileSystemImpl">
        <property name="fileSystemInfoRepo" ref="fileSystemInfoRepo"/>
        <property name="fileObjectStore" ref="fileObjectStore"/>
        <property name="contentStore" ref="contentStore"/>
    </bean>

    <bean id="fileHandleRegistry" class="org.avasquez.seccloudfs.filesystem.fuse.FileHandleRegistry">
        <property name="cacheContainer" ref="cacheManager"/>
    </bean>

    <bean id="fuseFileSystem" class="org.avasquez.seccloudfs.filesystem.fuse.SecCloudFS">
        <property name="options" value="${fuse.mount.options}"/>
        <property name="fileHandleRegistry" ref="fileHandleRegistry"/>
        <property name="fileSystem" ref="fileSystem"/>
        <property name="rootUid" value="${users.root.uid}"/>
        <property name="rootPermissions" value="${filesystem.root.permissions}"/>
        <property name="blockSize" value="${fuse.filesystem.blockSize}"/>
    </bean>

    <!-- Download Dir Manager -->

    <bean id="downloadsSpaceManager" class="org.avasquez.seccloudfs.filesystem.util.DownloadsSpaceManager">
        <property name="downloadsDir" value="${cloud.content.downloads.dir}"/>
        <property name="maxDirSize" value="${cloud.content.downloads.maxSize}"/>
        <property name="fileMetadataRepo" ref="fileMetadataRepo"/>
        <property name="contentStore" ref="contentStore"/>
    </bean>

    <!-- Scheduling -->

    <task:annotation-driven scheduler="scheduler"/>
    <task:scheduler id="scheduler" pool-size="${scheduler.threads.pool.size}"/>

    <!-- Cloud Store Factory Templates -->

    <bean id="googleDriveCloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.gdrive.utils.GoogleDriveCloudStoreFactory"
          abstract="true">
        <property name="clientId" value="${google.clientId}"/>
        <property name="clientSecret" value="${google.clientSecret}"/>
        <property name="applicationName" value="${google.applicationName}"/>
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxCacheEntries" value="${google.drive.cache.maxEntries}"/>
        <property name="credentialsRepository" ref="googleDriveCredentialsRepo"/>
    </bean>

    <bean id="dropboxCloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.dropbox.utils.DropboxCloudStoreFactory"
          abstract="true">
        <property name="requestConfig">
            <bean class="com.dropbox.core.DbxRequestConfig">
                <constructor-arg value="${dropbox.clientIdentifier}"/>
                <constructor-arg value="#{T(java.util.Locale).default.toString()}"/>
            </bean>
        </property>
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="credentialsRepository" ref="dropboxCredentialsRepo"/>
    </bean>

    <bean id="amazonS3CloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.amazon.utils.AmazonS3CloudStoreFactory"
          abstract="true">
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxCacheEntries" value="${google.drive.cache.maxEntries}"/>
    </bean>

    <!-- Cloud Store Registry -->

    <bean id="cloudStoreRegistry" class="org.avasquez.seccloudfs.cloud.impl.CloudStoreRegistryFactoryBean">
        <property name="cloudStores" ref="cloudStores"/>
        <property name="decoratorFactories">
            <list>
                <ref bean="encryptingCloudStoreDecoratorFactory"/>
                <ref bean="gZipCloudStoreDecoratorFactory"/>
            </list>
        </property>
    </bean>

    <util:list id="cloudStores"/>

    <!-- Erasure -->

    <bean id="liberation" class="org.avasquez.seccloudfs.erasure.impl.Liberation">
        <property name="k" value="${erasure.k}"/>
        <property name="m" value="${erasure.m}"/>
        <property name="w" value="${erasure.w}"/>
        <property name="packetSize" value="${erasure.packetSize}"/>
    </bean>

    <bean id="liberationEncoder" class="org.avasquez.seccloudfs.erasure.impl.JerasureEncoder">
        <property name="codingMethod" ref="liberation"/>
    </bean>

    <bean id="liberationDecoder" class="org.avasquez.seccloudfs.erasure.impl.JerasureDecoder">
        <property name="codingMethod" ref="liberation"/>
    </bean>

    <bean id="erasureEncoder" class="org.avasquez.seccloudfs.erasure.impl.BufferedErasureEncoder">
        <property name="bufferSize" value="${erasure.bufferSize}"/>
        <property name="actualEncoder" ref="liberationEncoder"/>
    </bean>

    <bean id="erasureDecoder" class="org.avasquez.seccloudfs.erasure.impl.BufferedErasureDecoder">
        <property name="bufferSize" value="${erasure.bufferSize}"/>
        <property name="actualDecoder" ref="liberationDecoder"/>
    </bean>

    <!-- Processing -->

    <bean id="encryptingCloudStoreDecoratorFactory"
          class="org.avasquez.seccloudfs.processing.utils.crypto.EncryptingCloudStoreDecoratorFactory">
        <property name="keyRepository" ref="encryptionKeyRepo"/>
        <property name="tmpDir" value="${tmp.dir}"/>
    </bean>

    <bean id="gZipCloudStoreDecoratorFactory"
          class="org.avasquez.seccloudfs.processing.utils.zip.GZipCloudStoreDecoratorFactory">
        <property name="tmpDir" value="${tmp.dir}"/>
    </bean>

    <bean id="distributedCloudStore" class="org.avasquez.seccloudfs.processing.impl.DistributedCloudStore">
        <property name="erasureEncoder" ref="erasureEncoder"/>
        <property name="erasureDecoder" ref="erasureDecoder"/>
        <property name="uploadRepository" ref="erasureInfoRepo"/>
        <property name="tmpDir" value="${tmp.dir}"/>
        <property name="cloudStoreRegistry" ref="cloudStoreRegistry"/>
        <property name="taskExecutor" ref="threadPool"/>
    </bean>

    <import resource="classpath*:custom-filesystem-context.xml"/>

</beans>