<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>file:@installDirRoot@/shared/conf/google-drive.properties</value>
                <value>file:@installDirRoot@/shared/conf/dropbox.properties</value>
                <value>classpath:custom-application.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <context:annotation-config/>

    <!-- Cache -->

    <bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager"/>

    <!-- Mongo -->

    <bean id="mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg value="${mongo.host}"/>
        <constructor-arg value="${mongo.port}"/>
    </bean>

    <bean id="jongo" class="org.avasquez.seccloudfs.db.impl.JongoFactoryBean">
        <property name="dbName" value="${mongo.db.name}"/>
        <property name="mongoClient" ref="mongoClient"/>
    </bean>

    <bean id="googleDriveCredentialsRepo"
          class="org.avasquez.seccloudfs.gdrive.db.repos.impl.FileGoogleDriveCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/google-drive"/>
    </bean>

    <bean id="dropboxCredentialsRepo"
          class="org.avasquez.seccloudfs.dropbox.db.repos.impl.FileDropboxCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/dropbox"/>
    </bean>

    <!-- Cloud Store Factory Templates -->

    <bean id="googleDriveCloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.gdrive.utils.GoogleDriveCloudStoreFactory"
          abstract="true">
        <property name="clientId" value="${google.clientId}"/>
        <property name="clientSecret" value="${google.clientSecret}"/>
        <property name="applicationName" value="${google.applicationName}"/>
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxCacheEntries" value="${google.drive.cache.maxEntries}"/>
        <property name="credentialsRepository" ref="googleDriveCredentialsRepo"/>
    </bean>

    <bean id="dropboxCloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.dropbox.utils.DropboxCloudStoreFactory"
          abstract="true">
        <property name="requestConfig">
            <bean class="com.dropbox.core.DbxRequestConfig">
                <constructor-arg value="${dropbox.clientIdentifier}"/>
                <constructor-arg value="#{T(java.util.Locale).default.toString()}"/>
            </bean>
        </property>
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="credentialsRepository" ref="dropboxCredentialsRepo"/>
    </bean>

    <bean id="amazonS3CloudStoreFactoryTemplate"
          class="org.avasquez.seccloudfs.amazon.utils.AmazonS3CloudStoreFactory"
          abstract="true">
        <property name="chunkedUploadThreshold" value="${cloud.store.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxCacheEntries" value="${google.drive.cache.maxEntries}"/>
    </bean>

    <import resource="classpath*:custom-application-context.xml"/>

</beans>