<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>file:@installDirRoot@/shared/conf/google-drive.properties</value>
                <value>file:@installDirRoot@/shared/conf/dropbox.properties</value>
                <value>classpath:custom-application.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <context:annotation-config/>

    <!-- Cache -->

    <bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager"/>

    <!-- Mongo -->

    <bean id="mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg value="${mongo.host}"/>
        <constructor-arg value="${mongo.port}"/>
    </bean>

    <bean id="jongo" class="org.avasquez.seccloudfs.db.impl.JongoFactoryBean">
        <property name="dbName" value="${mongo.db.name}"/>
        <property name="mongoClient" ref="mongoClient"/>
    </bean>

    <bean id="googleDriveCredentialsRepo"
          class="org.avasquez.seccloudfs.gdrive.db.repos.impl.FileGoogleDriveCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/google-drive"/>
    </bean>

    <bean id="dropboxCredentialsRepo"
          class="org.avasquez.seccloudfs.dropbox.db.repos.impl.FileDropboxCredentialsRepository">
        <constructor-arg value="@installDirRoot@/shared/credentials/dropbox"/>
    </bean>

    <!-- Client Factories -->

    <bean id="googleDriveClientFactory" class="org.avasquez.seccloudfs.gdrive.utils.GoogleDriveClientFactory">
        <property name="clientId" value="${google.clientId}"/>
        <property name="clientSecret" value="${google.clientSecret}"/>
        <property name="applicationName" value="${google.applicationName}"/>
        <property name="credentialsRepository" ref="googleDriveCredentialsRepo"/>
    </bean>

    <bean id="dropboxClientFactory" class="org.avasquez.seccloudfs.dropbox.utils.DropboxClientFactory">
        <property name="requestConfig">
            <bean class="com.dropbox.core.DbxRequestConfig">
                <constructor-arg value="${dropbox.clientIdentifier}"/>
                <constructor-arg value="#{T(java.util.Locale).default.toString()}"/>
            </bean>
        </property>
    </bean>

    <bean id="amazonS3ClientFactory" class="org.avasquez.seccloudfs.amazon.utils.AmazonS3ClientFactory"/>

    <!-- Cloud Store Registrars -->

    <bean id="googleDriveCloudStoreRegistrar"
          class="org.avasquez.seccloudfs.gdrive.utils.GoogleDriveCloudStoreRegistrar">
        <property name="credentialsRepository" ref="googleDriveCredentialsRepo"/>
        <property name="clientFactory" ref="googleDriveClientFactory"/>
        <property name="storesPerAccount" value="${google.drive.storesPerAccount}"/>
        <property name="rootFolderNameFormat" value="${google.drive.rootFolder.format}"/>
        <property name="chunkedUploadThreshold" value="${google.drive.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxEntriesPerCache" value="${google.drive.maxEntriesPerCache}"/>
    </bean>

    <bean id="dropboxCloudStoreRegistrar" class="org.avasquez.seccloudfs.dropbox.utils.DropboxCloudStoreRegistrar">
        <property name="credentialsRepository" ref="dropboxCredentialsRepo"/>
        <property name="clientFactory" ref="dropboxClientFactory"/>
        <property name="storesPerAccount" value="${dropbox.storesPerAccount}"/>
        <property name="rootFolderNameFormat" value="${dropbox.rootFolder.format}"/>
        <property name="chunkedUploadThreshold" value="${dropbox.chunkedUploadThreshold}"/>
    </bean>

    <bean id="amazonS3CloudStoreRegistrar" class="org.avasquez.seccloudfs.amazon.utils.AmazonS3CloudStoreRegistrar">
        <property name="credentials" ref="amazonCredentials"/>
        <property name="clientFactory" ref="amazonS3ClientFactory"/>
        <property name="storesPerAccount" value="${amazon.storesPerAccount}"/>
        <property name="rootFolderNameFormat" value="${amazon.bucketName.format}"/>
        <property name="chunkedUploadThreshold" value="${amazon.chunkedUploadThreshold}"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="maxEntriesPerCache" value="${amazon.cache.maxEntriesPerCache}"/>
    </bean>

    <util:list id="amazonCredentials"/>

    <!-- Cloud Store Registry -->

    <bean id="cloudStoreRegistry" class="org.avasquez.seccloudfs.cloud.impl.CloudStoreRegistryFactoryBean">
        <property name="registrars">
            <list>
                <ref bean="googleDriveCloudStoreRegistrar"/>
                <ref bean="dropboxCloudStoreRegistrar"/>
                <ref bean="amazonS3CloudStoreRegistrar"/>
            </list>
        </property>
    </bean>

    <!-- Apache VFS -->

    <bean id="fileSystemManager" class="org.avasquez.seccloudfs.apache.vfs.utils.DefaultFileSystemManagerFactoryBean">
        <property name="providers">
            <map>
                <entry key="sftp">
                    <bean class="org.apache.commons.vfs2.provider.sftp.SftpFileProvider"/>
                </entry>
            </map>
        </property>
    </bean>

    <import resource="classpath*:custom-application-context.xml"/>

</beans>